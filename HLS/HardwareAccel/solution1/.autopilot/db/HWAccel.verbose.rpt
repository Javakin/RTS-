

================================================================
== Vivado HLS Report for 'HWAccel'
================================================================
* Date:           Mon Jun 11 23:41:54 2018

* Version:        2018.1 (Build 2188600 on Wed Apr 04 19:04:02 MDT 2018)
* Project:        HardwareAccel
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      6.91|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    7|    7|    7|    7|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+-------+-------+
|       Name      | BRAM_18K| DSP48E|   FF  |  LUT  |
+-----------------+---------+-------+-------+-------+
|DSP              |        -|      -|      -|      -|
|Expression       |        -|      -|      -|      -|
|FIFO             |        -|      -|      -|      -|
|Instance         |        4|      8|    526|    280|
|Memory           |        -|      -|      -|      -|
|Multiplexer      |        -|      -|      -|    130|
|Register         |        -|      -|    200|      -|
+-----------------+---------+-------+-------+-------+
|Total            |        4|      8|    726|    410|
+-----------------+---------+-------+-------+-------+
|Available        |      120|     80|  35200|  17600|
+-----------------+---------+-------+-------+-------+
|Utilization (%)  |        3|     10|      2|      2|
+-----------------+---------+-------+-------+-------+

+ Detail: 
    * Instance: 
    +-------------------------+----------------------+---------+-------+-----+-----+
    |         Instance        |        Module        | BRAM_18K| DSP48E|  FF | LUT |
    +-------------------------+----------------------+---------+-------+-----+-----+
    |HWAccel_AXI_L_s_axi_U    |HWAccel_AXI_L_s_axi   |        4|      0|  196|  180|
    |HWAccel_mul_32s_3bkb_U1  |HWAccel_mul_32s_3bkb  |        0|      4|  165|   50|
    |HWAccel_mul_32s_3bkb_U2  |HWAccel_mul_32s_3bkb  |        0|      4|  165|   50|
    +-------------------------+----------------------+---------+-------+-----+-----+
    |Total                    |                      |        4|      8|  526|  280|
    +-------------------------+----------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    +-----------------------+----+-----------+-----+-----------+
    |          Name         | LUT| Input Size| Bits| Total Bits|
    +-----------------------+----+-----------+-----+-----------+
    |ap_NS_fsm              |  44|          9|    1|          9|
    |s_mask_val_address0    |  27|          5|    2|         10|
    |s_screen_val_address0  |  44|          9|    2|         18|
    |s_screen_val_d0        |  15|          3|   32|         96|
    +-----------------------+----+-----------+-----+-----------+
    |Total                  | 130|         26|   37|        133|
    +-----------------------+----+-----------+-----+-----------+

    * Register: 
    +-----------+----+----+-----+-----------+
    |    Name   | FF | LUT| Bits| Const Bits|
    +-----------+----+----+-----+-----------+
    |ap_CS_fsm  |   8|   0|    8|          0|
    |reg_118    |  32|   0|   32|          0|
    |reg_122    |  32|   0|   32|          0|
    |reg_126    |  32|   0|   32|          0|
    |reg_130    |  32|   0|   32|          0|
    |reg_146    |  32|   0|   32|          0|
    |reg_151    |  32|   0|   32|          0|
    +-----------+----+----+-----+-----------+
    |Total      | 200|   0|  200|          0|
    +-----------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+---------------------+-----+-----+------------+--------------+--------------+
|      RTL Ports      | Dir | Bits|  Protocol  | Source Object|    C Type    |
+---------------------+-----+-----+------------+--------------+--------------+
|s_axi_AXI_L_AWVALID  |  in |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_AWREADY  | out |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_AWADDR   |  in |    6|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_WVALID   |  in |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_WREADY   | out |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_WDATA    |  in |   32|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_WSTRB    |  in |    4|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_ARVALID  |  in |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_ARREADY  | out |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_ARADDR   |  in |    6|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_RVALID   | out |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_RREADY   |  in |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_RDATA    | out |   32|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_RRESP    | out |    2|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_BVALID   | out |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_BREADY   |  in |    1|    s_axi   |     AXI_L    |     array    |
|s_axi_AXI_L_BRESP    | out |    2|    s_axi   |     AXI_L    |     array    |
|ap_clk               |  in |    1| ap_ctrl_hs |    HWAccel   | return value |
|ap_rst_n             |  in |    1| ap_ctrl_hs |    HWAccel   | return value |
|interrupt            | out |    1| ap_ctrl_hs |    HWAccel   | return value |
+---------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 

* FSM state operations: 

 <State 1> : 2.32ns
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%s_screen_val_addr = getelementptr [4 x i32]* %s_screen_val, i64 0, i64 0" [HardwareAccel/Main.c:28]
ST_1 : Operation 10 [2/2] (2.32ns)   --->   "%s_screen_val_load = load i32* %s_screen_val_addr, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%s_mask_val_addr = getelementptr [4 x i32]* %s_mask_val, i64 0, i64 0" [HardwareAccel/Main.c:28]
ST_1 : Operation 12 [2/2] (2.32ns)   --->   "%s_mask_val_load = load i32* %s_mask_val_addr, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>

 <State 2> : 2.32ns
ST_2 : Operation 13 [1/2] (2.32ns)   --->   "%s_screen_val_load = load i32* %s_screen_val_addr, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 14 [1/2] (2.32ns)   --->   "%s_mask_val_load = load i32* %s_mask_val_addr, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%s_screen_val_addr_1 = getelementptr [4 x i32]* %s_screen_val, i64 0, i64 1" [HardwareAccel/Main.c:28]
ST_2 : Operation 16 [2/2] (2.32ns)   --->   "%s_screen_val_load_1 = load i32* %s_screen_val_addr_1, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%s_mask_val_addr_1 = getelementptr [4 x i32]* %s_mask_val, i64 0, i64 1" [HardwareAccel/Main.c:28]
ST_2 : Operation 18 [2/2] (2.32ns)   --->   "%s_mask_val_load_1 = load i32* %s_mask_val_addr_1, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>

 <State 3> : 6.91ns
ST_3 : Operation 19 [2/2] (6.91ns)   --->   "%tmp_1 = mul nsw i32 %s_screen_val_load, %s_mask_val_load" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 20 [1/2] (2.32ns)   --->   "%s_screen_val_load_1 = load i32* %s_screen_val_addr_1, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 21 [1/2] (2.32ns)   --->   "%s_mask_val_load_1 = load i32* %s_mask_val_addr_1, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%s_screen_val_addr_2 = getelementptr [4 x i32]* %s_screen_val, i64 0, i64 2" [HardwareAccel/Main.c:28]
ST_3 : Operation 23 [2/2] (2.32ns)   --->   "%s_screen_val_load_2 = load i32* %s_screen_val_addr_2, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%s_mask_val_addr_2 = getelementptr [4 x i32]* %s_mask_val, i64 0, i64 2" [HardwareAccel/Main.c:28]
ST_3 : Operation 25 [2/2] (2.32ns)   --->   "%s_mask_val_load_2 = load i32* %s_mask_val_addr_2, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>

 <State 4> : 6.91ns
ST_4 : Operation 26 [1/2] (6.91ns)   --->   "%tmp_1 = mul nsw i32 %s_screen_val_load, %s_mask_val_load" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 27 [2/2] (6.91ns)   --->   "%tmp_1_1 = mul nsw i32 %s_screen_val_load_1, %s_mask_val_load_1" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 28 [1/2] (2.32ns)   --->   "%s_screen_val_load_2 = load i32* %s_screen_val_addr_2, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 29 [1/2] (2.32ns)   --->   "%s_mask_val_load_2 = load i32* %s_mask_val_addr_2, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%s_screen_val_addr_3 = getelementptr [4 x i32]* %s_screen_val, i64 0, i64 3" [HardwareAccel/Main.c:28]
ST_4 : Operation 31 [2/2] (2.32ns)   --->   "%s_screen_val_load_3 = load i32* %s_screen_val_addr_3, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%s_mask_val_addr_3 = getelementptr [4 x i32]* %s_mask_val, i64 0, i64 3" [HardwareAccel/Main.c:28]
ST_4 : Operation 33 [2/2] (2.32ns)   --->   "%s_mask_val_load_3 = load i32* %s_mask_val_addr_3, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>

 <State 5> : 6.91ns
ST_5 : Operation 34 [1/1] (2.32ns)   --->   "store i32 %tmp_1, i32* %s_screen_val_addr, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 35 [1/2] (6.91ns)   --->   "%tmp_1_1 = mul nsw i32 %s_screen_val_load_1, %s_mask_val_load_1" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [2/2] (6.91ns)   --->   "%tmp_1_2 = mul nsw i32 %s_screen_val_load_2, %s_mask_val_load_2" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 37 [1/2] (2.32ns)   --->   "%s_screen_val_load_3 = load i32* %s_screen_val_addr_3, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 38 [1/2] (2.32ns)   --->   "%s_mask_val_load_3 = load i32* %s_mask_val_addr_3, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>

 <State 6> : 6.91ns
ST_6 : Operation 39 [1/1] (2.32ns)   --->   "store i32 %tmp_1_1, i32* %s_screen_val_addr_1, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_6 : Operation 40 [1/2] (6.91ns)   --->   "%tmp_1_2 = mul nsw i32 %s_screen_val_load_2, %s_mask_val_load_2" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 41 [2/2] (6.91ns)   --->   "%tmp_1_3 = mul nsw i32 %s_screen_val_load_3, %s_mask_val_load_3" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

 <State 7> : 6.91ns
ST_7 : Operation 42 [1/1] (2.32ns)   --->   "store i32 %tmp_1_2, i32* %s_screen_val_addr_2, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_7 : Operation 43 [1/2] (6.91ns)   --->   "%tmp_1_3 = mul nsw i32 %s_screen_val_load_3, %s_mask_val_load_3" [HardwareAccel/Main.c:28]   --->   Core 17 'MulnS' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

 <State 8> : 2.32ns
ST_8 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %s_screen_val), !map !7"
ST_8 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %s_mask_val), !map !13"
ST_8 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @HWAccel_str) nounwind"
ST_8 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [HardwareAccel/Main.c:19]
ST_8 : Operation 48 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([4 x i32]* %s_screen_val, [1 x i8]* @p_str3, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str3, i32 -1, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3)"
ST_8 : Operation 49 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecMemCore([4 x i32]* %s_mask_val, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4)"
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([4 x i32]* %s_screen_val, [4 x i32]* %s_mask_val, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [HardwareAccel/Main.c:20]
ST_8 : Operation 51 [1/1] (2.32ns)   --->   "store i32 %tmp_1_3, i32* %s_screen_val_addr_3, align 4" [HardwareAccel/Main.c:28]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 4> <RAM>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "ret void" [HardwareAccel/Main.c:30]


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ s_screen_val]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=1; pingpong=0; private_global=0; MemPort=[2]; IO mode=ap_memory:ce=0
Port [ s_mask_val]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=0; private_global=0; MemPort=[1]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
s_screen_val_addr   (getelementptr) [ 001111000]
s_mask_val_addr     (getelementptr) [ 001000000]
s_screen_val_load   (load         ) [ 000110000]
s_mask_val_load     (load         ) [ 000110000]
s_screen_val_addr_1 (getelementptr) [ 000111100]
s_mask_val_addr_1   (getelementptr) [ 000100000]
s_screen_val_load_1 (load         ) [ 000011000]
s_mask_val_load_1   (load         ) [ 000011000]
s_screen_val_addr_2 (getelementptr) [ 000011110]
s_mask_val_addr_2   (getelementptr) [ 000010000]
tmp_1               (mul          ) [ 000001000]
s_screen_val_load_2 (load         ) [ 000001100]
s_mask_val_load_2   (load         ) [ 000001100]
s_screen_val_addr_3 (getelementptr) [ 000001111]
s_mask_val_addr_3   (getelementptr) [ 000001000]
StgValue_34         (store        ) [ 000000000]
tmp_1_1             (mul          ) [ 000000100]
s_screen_val_load_3 (load         ) [ 000000110]
s_mask_val_load_3   (load         ) [ 000000110]
StgValue_39         (store        ) [ 000000000]
tmp_1_2             (mul          ) [ 000000010]
StgValue_42         (store        ) [ 000000000]
tmp_1_3             (mul          ) [ 000000001]
StgValue_44         (specbitsmap  ) [ 000000000]
StgValue_45         (specbitsmap  ) [ 000000000]
StgValue_46         (spectopmodule) [ 000000000]
StgValue_47         (specinterface) [ 000000000]
empty               (specmemcore  ) [ 000000000]
empty_2             (specmemcore  ) [ 000000000]
StgValue_50         (specinterface) [ 000000000]
StgValue_51         (store        ) [ 000000000]
StgValue_52         (ret          ) [ 000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="s_screen_val">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_screen_val"/><MemPortTyVec>2 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="s_mask_val">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="s_mask_val"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="HWAccel_str"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecMemCore"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="RAM_1P_str"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="38" class="1004" name="s_screen_val_addr_gep_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="32" slack="0"/>
<pin id="40" dir="0" index="1" bw="1" slack="0"/>
<pin id="41" dir="0" index="2" bw="1" slack="0"/>
<pin id="42" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_screen_val_addr/1 "/>
</bind>
</comp>

<comp id="46" class="1004" name="grp_access_fu_46">
<pin_list>
<pin id="47" dir="0" index="0" bw="2" slack="0"/>
<pin id="48" dir="0" index="1" bw="32" slack="1"/>
<pin id="49" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="load(27) store(28) " fcode="store"/>
<opset="s_screen_val_load/1 s_screen_val_load_1/2 s_screen_val_load_2/3 s_screen_val_load_3/4 StgValue_34/5 StgValue_39/6 StgValue_42/7 StgValue_51/8 "/>
</bind>
</comp>

<comp id="51" class="1004" name="s_mask_val_addr_gep_fu_51">
<pin_list>
<pin id="52" dir="0" index="0" bw="32" slack="0"/>
<pin id="53" dir="0" index="1" bw="1" slack="0"/>
<pin id="54" dir="0" index="2" bw="1" slack="0"/>
<pin id="55" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_mask_val_addr/1 "/>
</bind>
</comp>

<comp id="59" class="1004" name="grp_access_fu_59">
<pin_list>
<pin id="60" dir="0" index="0" bw="2" slack="0"/>
<pin id="61" dir="0" index="1" bw="32" slack="2147483647"/>
<pin id="62" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="s_mask_val_load/1 s_mask_val_load_1/2 s_mask_val_load_2/3 s_mask_val_load_3/4 "/>
</bind>
</comp>

<comp id="64" class="1004" name="s_screen_val_addr_1_gep_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="0"/>
<pin id="66" dir="0" index="1" bw="1" slack="0"/>
<pin id="67" dir="0" index="2" bw="1" slack="0"/>
<pin id="68" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_screen_val_addr_1/2 "/>
</bind>
</comp>

<comp id="73" class="1004" name="s_mask_val_addr_1_gep_fu_73">
<pin_list>
<pin id="74" dir="0" index="0" bw="32" slack="0"/>
<pin id="75" dir="0" index="1" bw="1" slack="0"/>
<pin id="76" dir="0" index="2" bw="1" slack="0"/>
<pin id="77" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_mask_val_addr_1/2 "/>
</bind>
</comp>

<comp id="82" class="1004" name="s_screen_val_addr_2_gep_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="32" slack="0"/>
<pin id="84" dir="0" index="1" bw="1" slack="0"/>
<pin id="85" dir="0" index="2" bw="3" slack="0"/>
<pin id="86" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_screen_val_addr_2/3 "/>
</bind>
</comp>

<comp id="91" class="1004" name="s_mask_val_addr_2_gep_fu_91">
<pin_list>
<pin id="92" dir="0" index="0" bw="32" slack="0"/>
<pin id="93" dir="0" index="1" bw="1" slack="0"/>
<pin id="94" dir="0" index="2" bw="3" slack="0"/>
<pin id="95" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_mask_val_addr_2/3 "/>
</bind>
</comp>

<comp id="100" class="1004" name="s_screen_val_addr_3_gep_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="32" slack="0"/>
<pin id="102" dir="0" index="1" bw="1" slack="0"/>
<pin id="103" dir="0" index="2" bw="3" slack="0"/>
<pin id="104" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_screen_val_addr_3/4 "/>
</bind>
</comp>

<comp id="109" class="1004" name="s_mask_val_addr_3_gep_fu_109">
<pin_list>
<pin id="110" dir="0" index="0" bw="32" slack="0"/>
<pin id="111" dir="0" index="1" bw="1" slack="0"/>
<pin id="112" dir="0" index="2" bw="3" slack="0"/>
<pin id="113" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="s_mask_val_addr_3/4 "/>
</bind>
</comp>

<comp id="118" class="1005" name="reg_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="32" slack="1"/>
<pin id="120" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="s_screen_val_load s_screen_val_load_2 "/>
</bind>
</comp>

<comp id="122" class="1005" name="reg_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="32" slack="1"/>
<pin id="124" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="s_mask_val_load s_mask_val_load_2 "/>
</bind>
</comp>

<comp id="126" class="1005" name="reg_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="32" slack="1"/>
<pin id="128" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="s_screen_val_load_1 s_screen_val_load_3 "/>
</bind>
</comp>

<comp id="130" class="1005" name="reg_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="32" slack="1"/>
<pin id="132" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="s_mask_val_load_1 s_mask_val_load_3 "/>
</bind>
</comp>

<comp id="134" class="1004" name="grp_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="32" slack="1"/>
<pin id="136" dir="0" index="1" bw="32" slack="1"/>
<pin id="137" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="tmp_1/3 tmp_1_2/5 "/>
</bind>
</comp>

<comp id="140" class="1004" name="grp_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="32" slack="1"/>
<pin id="142" dir="0" index="1" bw="32" slack="1"/>
<pin id="143" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="tmp_1_1/4 tmp_1_3/6 "/>
</bind>
</comp>

<comp id="146" class="1005" name="reg_146">
<pin_list>
<pin id="147" dir="0" index="0" bw="32" slack="1"/>
<pin id="148" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_1 tmp_1_2 "/>
</bind>
</comp>

<comp id="151" class="1005" name="reg_151">
<pin_list>
<pin id="152" dir="0" index="0" bw="32" slack="1"/>
<pin id="153" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_1_1 tmp_1_3 "/>
</bind>
</comp>

<comp id="156" class="1005" name="s_screen_val_addr_reg_156">
<pin_list>
<pin id="157" dir="0" index="0" bw="2" slack="1"/>
<pin id="158" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_screen_val_addr "/>
</bind>
</comp>

<comp id="161" class="1005" name="s_mask_val_addr_reg_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="2" slack="1"/>
<pin id="163" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_mask_val_addr "/>
</bind>
</comp>

<comp id="166" class="1005" name="s_screen_val_addr_1_reg_166">
<pin_list>
<pin id="167" dir="0" index="0" bw="2" slack="1"/>
<pin id="168" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_screen_val_addr_1 "/>
</bind>
</comp>

<comp id="171" class="1005" name="s_mask_val_addr_1_reg_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="2" slack="1"/>
<pin id="173" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_mask_val_addr_1 "/>
</bind>
</comp>

<comp id="176" class="1005" name="s_screen_val_addr_2_reg_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="2" slack="1"/>
<pin id="178" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_screen_val_addr_2 "/>
</bind>
</comp>

<comp id="181" class="1005" name="s_mask_val_addr_2_reg_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="2" slack="1"/>
<pin id="183" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_mask_val_addr_2 "/>
</bind>
</comp>

<comp id="186" class="1005" name="s_screen_val_addr_3_reg_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="2" slack="1"/>
<pin id="188" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_screen_val_addr_3 "/>
</bind>
</comp>

<comp id="191" class="1005" name="s_mask_val_addr_3_reg_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="2" slack="1"/>
<pin id="193" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="s_mask_val_addr_3 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="43"><net_src comp="0" pin="0"/><net_sink comp="38" pin=0"/></net>

<net id="44"><net_src comp="4" pin="0"/><net_sink comp="38" pin=1"/></net>

<net id="45"><net_src comp="4" pin="0"/><net_sink comp="38" pin=2"/></net>

<net id="50"><net_src comp="38" pin="3"/><net_sink comp="46" pin=0"/></net>

<net id="56"><net_src comp="2" pin="0"/><net_sink comp="51" pin=0"/></net>

<net id="57"><net_src comp="4" pin="0"/><net_sink comp="51" pin=1"/></net>

<net id="58"><net_src comp="4" pin="0"/><net_sink comp="51" pin=2"/></net>

<net id="63"><net_src comp="51" pin="3"/><net_sink comp="59" pin=0"/></net>

<net id="69"><net_src comp="0" pin="0"/><net_sink comp="64" pin=0"/></net>

<net id="70"><net_src comp="4" pin="0"/><net_sink comp="64" pin=1"/></net>

<net id="71"><net_src comp="6" pin="0"/><net_sink comp="64" pin=2"/></net>

<net id="72"><net_src comp="64" pin="3"/><net_sink comp="46" pin=0"/></net>

<net id="78"><net_src comp="2" pin="0"/><net_sink comp="73" pin=0"/></net>

<net id="79"><net_src comp="4" pin="0"/><net_sink comp="73" pin=1"/></net>

<net id="80"><net_src comp="6" pin="0"/><net_sink comp="73" pin=2"/></net>

<net id="81"><net_src comp="73" pin="3"/><net_sink comp="59" pin=0"/></net>

<net id="87"><net_src comp="0" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="88"><net_src comp="4" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="89"><net_src comp="8" pin="0"/><net_sink comp="82" pin=2"/></net>

<net id="90"><net_src comp="82" pin="3"/><net_sink comp="46" pin=0"/></net>

<net id="96"><net_src comp="2" pin="0"/><net_sink comp="91" pin=0"/></net>

<net id="97"><net_src comp="4" pin="0"/><net_sink comp="91" pin=1"/></net>

<net id="98"><net_src comp="8" pin="0"/><net_sink comp="91" pin=2"/></net>

<net id="99"><net_src comp="91" pin="3"/><net_sink comp="59" pin=0"/></net>

<net id="105"><net_src comp="0" pin="0"/><net_sink comp="100" pin=0"/></net>

<net id="106"><net_src comp="4" pin="0"/><net_sink comp="100" pin=1"/></net>

<net id="107"><net_src comp="10" pin="0"/><net_sink comp="100" pin=2"/></net>

<net id="108"><net_src comp="100" pin="3"/><net_sink comp="46" pin=0"/></net>

<net id="114"><net_src comp="2" pin="0"/><net_sink comp="109" pin=0"/></net>

<net id="115"><net_src comp="4" pin="0"/><net_sink comp="109" pin=1"/></net>

<net id="116"><net_src comp="10" pin="0"/><net_sink comp="109" pin=2"/></net>

<net id="117"><net_src comp="109" pin="3"/><net_sink comp="59" pin=0"/></net>

<net id="121"><net_src comp="46" pin="2"/><net_sink comp="118" pin=0"/></net>

<net id="125"><net_src comp="59" pin="2"/><net_sink comp="122" pin=0"/></net>

<net id="129"><net_src comp="46" pin="2"/><net_sink comp="126" pin=0"/></net>

<net id="133"><net_src comp="59" pin="2"/><net_sink comp="130" pin=0"/></net>

<net id="138"><net_src comp="118" pin="1"/><net_sink comp="134" pin=0"/></net>

<net id="139"><net_src comp="122" pin="1"/><net_sink comp="134" pin=1"/></net>

<net id="144"><net_src comp="126" pin="1"/><net_sink comp="140" pin=0"/></net>

<net id="145"><net_src comp="130" pin="1"/><net_sink comp="140" pin=1"/></net>

<net id="149"><net_src comp="134" pin="2"/><net_sink comp="146" pin=0"/></net>

<net id="150"><net_src comp="146" pin="1"/><net_sink comp="46" pin=1"/></net>

<net id="154"><net_src comp="140" pin="2"/><net_sink comp="151" pin=0"/></net>

<net id="155"><net_src comp="151" pin="1"/><net_sink comp="46" pin=1"/></net>

<net id="159"><net_src comp="38" pin="3"/><net_sink comp="156" pin=0"/></net>

<net id="160"><net_src comp="156" pin="1"/><net_sink comp="46" pin=0"/></net>

<net id="164"><net_src comp="51" pin="3"/><net_sink comp="161" pin=0"/></net>

<net id="165"><net_src comp="161" pin="1"/><net_sink comp="59" pin=0"/></net>

<net id="169"><net_src comp="64" pin="3"/><net_sink comp="166" pin=0"/></net>

<net id="170"><net_src comp="166" pin="1"/><net_sink comp="46" pin=0"/></net>

<net id="174"><net_src comp="73" pin="3"/><net_sink comp="171" pin=0"/></net>

<net id="175"><net_src comp="171" pin="1"/><net_sink comp="59" pin=0"/></net>

<net id="179"><net_src comp="82" pin="3"/><net_sink comp="176" pin=0"/></net>

<net id="180"><net_src comp="176" pin="1"/><net_sink comp="46" pin=0"/></net>

<net id="184"><net_src comp="91" pin="3"/><net_sink comp="181" pin=0"/></net>

<net id="185"><net_src comp="181" pin="1"/><net_sink comp="59" pin=0"/></net>

<net id="189"><net_src comp="100" pin="3"/><net_sink comp="186" pin=0"/></net>

<net id="190"><net_src comp="186" pin="1"/><net_sink comp="46" pin=0"/></net>

<net id="194"><net_src comp="109" pin="3"/><net_sink comp="191" pin=0"/></net>

<net id="195"><net_src comp="191" pin="1"/><net_sink comp="59" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: s_screen_val | {5 6 7 8 }
 - Input state : 
	Port: HWAccel : s_screen_val | {1 2 3 4 5 }
	Port: HWAccel : s_mask_val | {1 2 3 4 5 }
  - Chain level:
	State 1
		s_screen_val_load : 1
		s_mask_val_load : 1
	State 2
		s_screen_val_load_1 : 1
		s_mask_val_load_1 : 1
	State 3
		s_screen_val_load_2 : 1
		s_mask_val_load_2 : 1
	State 4
		s_screen_val_load_3 : 1
		s_mask_val_load_3 : 1
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------|---------|---------|---------|
| Operation| Functional Unit|  DSP48E |    FF   |   LUT   |
|----------|----------------|---------|---------|---------|
|    mul   |   grp_fu_134   |    4    |   165   |    50   |
|          |   grp_fu_140   |    4    |   165   |    50   |
|----------|----------------|---------|---------|---------|
|   Total  |                |    8    |   330   |   100   |
|----------|----------------|---------|---------|---------|

Memories:
N/A

* Register list:
+---------------------------+--------+
|                           |   FF   |
+---------------------------+--------+
|          reg_118          |   32   |
|          reg_122          |   32   |
|          reg_126          |   32   |
|          reg_130          |   32   |
|          reg_146          |   32   |
|          reg_151          |   32   |
| s_mask_val_addr_1_reg_171 |    2   |
| s_mask_val_addr_2_reg_181 |    2   |
| s_mask_val_addr_3_reg_191 |    2   |
|  s_mask_val_addr_reg_161  |    2   |
|s_screen_val_addr_1_reg_166|    2   |
|s_screen_val_addr_2_reg_176|    2   |
|s_screen_val_addr_3_reg_186|    2   |
| s_screen_val_addr_reg_156 |    2   |
+---------------------------+--------+
|           Total           |   208  |
+---------------------------+--------+

* Multiplexer (MUX) list: 
|------------------|------|------|------|--------||---------||---------|
|       Comp       |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------------|------|------|------|--------||---------||---------|
| grp_access_fu_46 |  p0  |   8  |   2  |   16   ||    41   |
| grp_access_fu_46 |  p1  |   2  |  32  |   64   ||    9    |
| grp_access_fu_59 |  p0  |   8  |   2  |   16   ||    41   |
|------------------|------|------|------|--------||---------||---------|
|       Total      |      |      |      |   96   ||  5.7718 ||    91   |
|------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    8   |    -   |   330  |   100  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    5   |    -   |   91   |
|  Register |    -   |    -   |   208  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    8   |    5   |   538  |   191  |
+-----------+--------+--------+--------+--------+
